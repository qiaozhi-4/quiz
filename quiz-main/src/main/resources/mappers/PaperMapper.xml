<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quiz.mapper.PaperMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.quiz.entity.Paper">
        <id column="paper_id" property="paperId"/>
        <result column="creator_user_id" property="creatorUserId"/>
        <result column="order_" property="order"/>
        <result column="state" property="state"/>
        <result column="cover_url" property="coverUrl"/>
        <result column="title" property="title"/>
        <result column="describe_" property="describe"/>
        <result column="answers" property="answers"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>
    <!-- Dto查询映射结果 -->
    <resultMap id="PaperDtoResultMap" extends="BaseResultMap" type="com.quiz.dto.PaperDTO">
        <collection property="questions" autoMapping="true" ofType="com.quiz.dto.QuestionDTO">
            <result column="question_title" property="title"/>
        </collection>
    </resultMap>

    <select id="selectPaperById" resultMap="PaperDtoResultMap" parameterType="java.lang.Integer">
        select a.*, c.*, c.title as question_title, qc.class_name
        from quiz.q_paper a
                 left join quiz.q_paper_questions b
                           on a.paper_id = b.paper_id
                 left join quiz.q_question c
                           on b.question_id = c.question_id
                 left join quiz.q_classes qc
                           on c.class_id = qc.class_id
        where a.paper_id = #{paperId}
          and a.state != -1
        order by b.id
    </select>
    <select id="selectPaperListByUserId" resultMap="PaperDtoResultMap">
        select a.*, count(b.responder_user_id) as answers_total, d.*, d.title as question_title, qc.class_name
        from quiz.q_paper a
                 left join quiz.q_answers b on a.paper_id = b.paper_id
                 left join quiz.q_paper_questions c on a.paper_id = c.paper_id
                 left join quiz.q_question d on c.question_id = d.question_id
                 left join quiz.q_classes qc on d.class_id = qc.class_id
        where a.state != -1
          and a.creator_user_id = #{userId}
        group by a.paper_id, d.question_id, qc.class_id
    </select>
    <select id="selectPaperAndAnswerInfoListByUserId" resultMap="PaperDtoResultMap">
        select qp.*, count(b.responder_user_id) as answers_total, c.answer_id, c.selects, c.score, qq.*, qq.title as question_title, qc.class_name
        from quiz.q_paper qp
                 left join quiz.q_answers b on qp.paper_id = b.paper_id
                 left join quiz.q_answers c on qp.paper_id = c.paper_id and c.responder_user_id = #{responderUserId}
                 left join quiz.q_paper_questions qpq on qpq.paper_id = qp.paper_id
                 left join quiz.q_question qq on qpq.question_id = qq.question_id
                 left join quiz.q_classes qc on qq.class_id = qc.class_id
        where qp.state != -1
          and qp.creator_user_id = #{creatorUserId}
        group by qp.paper_id, c.answer_id, qq.question_id, qc.class_id
    </select>
    <select id="selectPaperAndAnswerInfoListByPaperIdAndUserId" resultMap="PaperDtoResultMap">
        select a.*, b.answer_id, b.selects, b.score, d.*, d.title as question_title, qc.class_name
        from quiz.q_paper a
                 left join quiz.q_answers b on a.paper_id = b.paper_id and b.responder_user_id = #{responderUserId}
                 left join quiz.q_paper_questions c on a.paper_id = c.paper_id
                 left join quiz.q_question d on c.question_id = d.question_id
                 left join quiz.q_classes qc on d.class_id = qc.class_id
        where a.paper_id = #{paperId}
        group by a.paper_id, b.answer_id, d.question_id
    </select>

</mapper>
