<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quiz.mapper.AnswersMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.quiz.entity.Answers">
        <id column="answer_id" property="answerId"/>
        <result column="paper_id" property="paperId"/>
        <result column="responder_user_id" property="responderUserId"/>
        <result column="selects" property="selects"/>
        <result column="score" property="score"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>
    <!-- Dto查询映射结果 -->
    <resultMap id="AnswersDtoResultMap" extends="BaseResultMap" type="com.quiz.dto.AnswersDTO">
        <collection property="questions" autoMapping="true" ofType="com.quiz.dto.QuestionDTO"/>
    </resultMap>

    <select id="selectScoreByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select sum(a.score) as total_score
        from quiz.q_answers a
                 left join quiz.q_paper b
                           on a.paper_id = b.paper_id
        where a.responder_user_id = #{userId}; # 不要过滤掉已删除的试卷,因为只要获得过就行了
    </select>
    <select id="selectAnswersById" resultMap="AnswersDtoResultMap">
        select a.*, c.*, qc.class_name
        from quiz.q_answers a
                 left join quiz.q_paper aa
                           on a.paper_id = aa.paper_id
                 left join quiz.q_paper_questions b
                           on a.paper_id = b.paper_id
                 left join quiz.q_question c
                           on b.question_id = c.question_id
                 left join quiz.q_classes qc
                           on c.class_id = qc.class_id
        where a.answer_id = #{answerId}
          and aa.state != -1
        order by b.id;
    </select>
    <select id="selectAnswersListByUserId" resultMap="AnswersDtoResultMap">
        select a.*, c.*, qc.class_name
        from quiz.q_answers a
                 left join quiz.q_paper aa
                           on a.paper_id = aa.paper_id
                 left join quiz.q_paper_questions b
                           on a.paper_id = b.paper_id
                 left join quiz.q_question c
                           on b.question_id = c.question_id
                 left join quiz.q_classes qc
                           on c.class_id = qc.class_id
        where a.responder_user_id = #{userId}
          and aa.state != -1
        order by a.answer_id, b.id;
    </select>
    <select id="selectBadgeListByUserId" resultType="com.quiz.dto.AnswersDTO">
        select a.*,
               us.user_id    as creator_user_id,
               us.nickname   as creator_user_nickname,
               us.avatar_url as creator_user_avatar_url
        from quiz.q_answers a
                 left join quiz.q_paper b on a.paper_id = b.paper_id
                 left join quiz.t_user us on b.creator_user_id = us.user_id
        where a.responder_user_id = #{userId} # 不要过滤掉已删除的试卷,因为只要获得过就行了
          and a.score > 70
    </select>
</mapper>
