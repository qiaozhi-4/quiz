<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quiz.mapper.AnswerMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.quiz.entity.Answer">
        <id column="answer_id" property="answerId" />
        <result column="paper_id" property="paperId" />
        <result column="responder_user_id" property="responderUserId" />
        <result column="score" property="score" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>

    <!-- Dto查询映射结果 -->
    <resultMap id="AnswerDtoResultMap" extends="BaseResultMap" type="com.quiz.dto.AnswerDTO">
        <collection property="questions" autoMapping="true" ofType="com.quiz.dto.QuestionDTO"/>
    </resultMap>

    <select id="selectScoreByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select sum(qa.score) as total_score
        from quiz.q_answer qa
                 left join quiz.q_paper qp
                           on qa.paper_id = qp.paper_id
        where qa.responder_user_id = #{userId}; # 不要过滤掉已删除的试卷,因为只要获得过就行了
    </select>
    <select id="selectAnswerById" resultMap="AnswerDtoResultMap">
        select qa.*, qq.*, qc.sub_class_name as class_name
        from quiz.q_answer qa
                 left join quiz.q_paper qp
                           on qa.paper_id = qp.paper_id
                 left join quiz.q_paper_questions qpq
                           on qa.paper_id = qpq.paper_id
                 left join quiz.q_question qq
                           on qpq.question_id = qq.question_id
                 left join quiz.q_classes qc
                           on qq.class_id = qc.sub_class_id and qc.class_id = 1
        where qa.answer_id = #{answerId}
          and qp.state != -1
        order by qpq.id;
    </select>
    <select id="selectAnswerListByUserId" resultMap="AnswerDtoResultMap">
        select qa.*, qq.*, qc.sub_class_name as class_name
        from quiz.q_answer qa
                 left join quiz.q_paper qp
                           on qa.paper_id = qp.paper_id
                 left join quiz.q_paper_questions qpq
                           on qa.paper_id = qpq.paper_id
                 left join quiz.q_question qq
                           on qpq.question_id = qq.question_id
                 left join quiz.q_classes qc
                           on qq.class_id = qc.sub_class_id and qc.class_id = 1
        where qa.responder_user_id = #{userId}
          and qp.state != -1
        order by qa.answer_id, qpq.id;
    </select>
    <select id="selectBadgeListByUserId" resultType="com.quiz.dto.AnswerDTO">
        select qa.*,
               tu.user_id    as creator_user_id,
               tu.nickname   as creator_user_nickname,
               tu.avatar_url as creator_user_avatar_url
        from quiz.q_answer qa
                 left join quiz.q_paper qp on qa.paper_id = qp.paper_id
                 left join quiz.t_user tu on qp.creator_user_id = tu.user_id
        where qa.responder_user_id = #{userId} # 不要过滤掉已删除的试卷,因为只要获得过就行了
          and qa.score > 70
    </select>
</mapper>
